# Generated by Django 2.1.1 on 2018-11-13 18:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', help_text="The game's title", max_length=100)),
                ('online', models.BooleanField(default=True)),
                ('description', models.CharField(default='', help_text="The game's description", max_length=100)),
                ('link', models.CharField(default='', help_text="A link to this game's website", max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', help_text='The text content of the message', max_length=100)),
                ('datetime', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='The name of the platform (e.g. PlayStation 4)', max_length=100)),
                ('games', models.ManyToManyField(blank=True, to='PlayWithMe.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('uuid', models.CharField(help_text='ID to uniquely identify a session', max_length=60, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the session', max_length=100, null=True)),
                ('location', models.CharField(default='', help_text="The session's location", max_length=100)),
                ('online', models.BooleanField(default=True)),
                ('games', models.ManyToManyField(blank=True, to='PlayWithMe.Game')),
                ('messages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='PlayWithMe.Message')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('games', models.ManyToManyField(blank=True, to='PlayWithMe.Game')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('platforms', models.ManyToManyField(blank=True, to='PlayWithMe.Platform')),
                ('sessions', models.ManyToManyField(blank=True, related_name='sessions', to='PlayWithMe.Session')),
                ('sessions_owned', models.ManyToManyField(blank=True, related_name='sessions_owned', to='PlayWithMe.Session')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='session',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='session',
            name='platforms',
            field=models.ManyToManyField(blank=True, to='PlayWithMe.Platform'),
        ),
        migrations.AddField(
            model_name='session',
            name='profiles',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='context',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='PlayWithMe.Session'),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='platforms',
            field=models.ManyToManyField(blank=True, to='PlayWithMe.Platform'),
        ),
    ]
